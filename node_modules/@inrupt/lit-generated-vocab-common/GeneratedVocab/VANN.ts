import { LitVocabTerm, getLocalStore } from "@inrupt/lit-vocab-term";
import dataFactory from "@rdfjs/data-model";

const { namedNode } = dataFactory;
import { NamedNode } from "rdf-js";

/**
  Generated by artifact generator [@inrupt/lit-artifact-generator], version [0.10.15]
  as part of artifact: [vocab-common], version: [0.3.11]
  at 'Saturday, May 30, 2020 1:18 AM'.

  Vocabulary built from vocab list file: [/home/pmcb55/Work/Projects/LIT/lit-vocab/vocab/lit-rdf-vocab/Common/Vocab-List-LIT-Common.yml].

  A vocabulary for annotating vocabulary descriptions (VANN).
 */

function _NS(localName: string): NamedNode { 
  return namedNode(`http://purl.org/vocab/vann/${localName}`);
}

const VANN = {
  PREFIX: "vann",
  NAMESPACE: "http://purl.org/vocab/vann/",
  PREFIX_AND_NAMESPACE: { "vann": "http://purl.org/vocab/vann/" },
  NS: _NS,


  // *******************
  // All the Properties.
  // *******************

  /**
   * The preferred namespace prefix to ue when using terms from this vocabulary in an XML document.
   */
  preferredNamespacePrefix: new LitVocabTerm(
    _NS("preferredNamespacePrefix"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Preferred namespace prefix`, "en")
    .addComment(`The preferred namespace prefix to ue when using terms from this vocabulary in an XML document.`, "en"),

  /**
   * The preferred namespace URI to use when using terms from this vocabulary in an XML document.
   */
  preferredNamespaceUri: new LitVocabTerm(
    _NS("preferredNamespaceUri"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Preferred namespace URI`, "en")
    .addComment(`The preferred namespace URI to use when using terms from this vocabulary in an XML document.`, "en"),

  /**
   * A reference to a resource that describes changes between this version of a vocabulary and the previous.
   */
  changes: new LitVocabTerm(
    _NS("changes"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`changes`, "en")
    .addComment(`A reference to a resource that describes changes between this version of a vocabulary and the previous.`, "en"),

  /**
   * A reference to a resource that provides an example of how this resource can be used.
   */
  example: new LitVocabTerm(
    _NS("example"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Example`, "en")
    .addComment(`A reference to a resource that provides an example of how this resource can be used.`, "en"),

  /**
   * A group of related terms in a vocabulary.
   */
  termGroup: new LitVocabTerm(
    _NS("termGroup"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Term group`, "en")
    .addComment(`A group of related terms in a vocabulary.`, "en"),

  /**
   * A reference to a resource that provides information on how this resource is to be used.
   */
  usageNote: new LitVocabTerm(
    _NS("usageNote"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Usage note`, "en")
    .addComment(`A reference to a resource that provides information on how this resource is to be used.`, "en"),

};

export { VANN };
