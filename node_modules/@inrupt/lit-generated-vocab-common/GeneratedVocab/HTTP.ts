import { LitVocabTerm, getLocalStore } from "@inrupt/lit-vocab-term";
import dataFactory from "@rdfjs/data-model";

const { namedNode } = dataFactory;
import { NamedNode } from "rdf-js";

/**
  Generated by artifact generator [@inrupt/lit-artifact-generator], version [0.10.15]
  as part of artifact: [vocab-common], version: [0.3.11]
  at 'Saturday, May 30, 2020 1:18 AM'.

  Vocabulary built from vocab list file: [/home/pmcb55/Work/Projects/LIT/lit-vocab/vocab/lit-rdf-vocab/Common/Vocab-List-LIT-Common.yml].
 */

function _NS(localName: string): NamedNode { 
  return namedNode(`http://www.w3.org/2011/http#${localName}`);
}

const HTTP = {
  PREFIX: "http",
  NAMESPACE: "http://www.w3.org/2011/http#",
  PREFIX_AND_NAMESPACE: { "http": "http://www.w3.org/2011/http#" },
  NS: _NS,

  // *****************
  // All the Classes.
  // *****************

  /**
   * A connection used for HTTP transfer.
   */
  Connection: new LitVocabTerm(
    _NS("Connection"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Connection`, "en")
    .addComment(`A connection used for HTTP transfer.`, "en"),

  /**
   * An entity header in an HTTP message.
   */
  EntityHeader: new LitVocabTerm(
    _NS("EntityHeader"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Entity Header`, "en")
    .addComment(`An entity header in an HTTP message.`, "en"),

  /**
   * A header in an HTTP message.
   */
  MessageHeader: new LitVocabTerm(
    _NS("MessageHeader"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Message Header`, "en")
    .addComment(`A header in an HTTP message.`, "en"),

  /**
   * A general header in an HTTP message.
   */
  GeneralHeader: new LitVocabTerm(
    _NS("GeneralHeader"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`General Header`, "en")
    .addComment(`A general header in an HTTP message.`, "en"),

  /**
   * A part of a deconstructed header value.
   */
  HeaderElement: new LitVocabTerm(
    _NS("HeaderElement"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Header Element`, "en")
    .addComment(`A part of a deconstructed header value.`, "en"),

  /**
   * A header name.
   */
  HeaderName: new LitVocabTerm(
    _NS("HeaderName"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Header Name`, "en")
    .addComment(`A header name.`, "en"),

  /**
   * An HTTP message.
   */
  Message: new LitVocabTerm(
    _NS("Message"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Message`, "en")
    .addComment(`An HTTP message.`, "en"),

  /**
   * The HTTP method used for the request.
   */
  Method: new LitVocabTerm(
    _NS("Method"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Method`, "en")
    .addComment(`The HTTP method used for the request.`, "en"),

  /**
   * A parameter for a part of a header value.
   */
  Parameter: new LitVocabTerm(
    _NS("Parameter"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Parameter`, "en")
    .addComment(`A parameter for a part of a header value.`, "en"),

  /**
   * An HTTP request.
   */
  Request: new LitVocabTerm(
    _NS("Request"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Request`, "en")
    .addComment(`An HTTP request.`, "en"),

  /**
   * A header in an HTTP request message.
   */
  RequestHeader: new LitVocabTerm(
    _NS("RequestHeader"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Request Header`, "en")
    .addComment(`A header in an HTTP request message.`, "en"),

  /**
   * An HTTP response.
   */
  Response: new LitVocabTerm(
    _NS("Response"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Response`, "en")
    .addComment(`An HTTP response.`, "en"),

  /**
   * A header in an HTTP response message.
   */
  ResponseHeader: new LitVocabTerm(
    _NS("ResponseHeader"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Response Header`, "en")
    .addComment(`A header in an HTTP response message.`, "en"),

  /**
   * The status code of an HTTP response.
   */
  StatusCode: new LitVocabTerm(
    _NS("StatusCode"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Status code`, "en")
    .addComment(`The status code of an HTTP response.`, "en"),

  // *******************
  // All the Properties.
  // *******************

  /**
   * The absolute request URI.
   */
  absoluteURI: new LitVocabTerm(
    _NS("absoluteURI"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Absolute URI`, "en")
    .addComment(`The absolute request URI.`, "en"),

  /**
   * The request URI of an HTTP request.
   */
  requestURI: new LitVocabTerm(
    _NS("requestURI"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Request URI`, "en")
    .addComment(`The request URI of an HTTP request.`, "en"),

  /**
   * The absolute path sort of request URI.
   */
  absolutePath: new LitVocabTerm(
    _NS("absolutePath"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Absolute path`, "en")
    .addComment(`The absolute path sort of request URI.`, "en"),

  /**
   * The authority sort of request URI.
   */
  authority: new LitVocabTerm(
    _NS("authority"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Authority`, "en")
    .addComment(`The authority sort of request URI.`, "en"),

  /**
   * The entity body of an HTTP message.
   */
  body: new LitVocabTerm(
    _NS("body"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Entity Body`, "en")
    .addComment(`The entity body of an HTTP message.`, "en"),

  /**
   * The authority of a connection used for the HTTP transfer.
   */
  connectionAuthority: new LitVocabTerm(
    _NS("connectionAuthority"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Connection authority`, "en")
    .addComment(`The authority of a connection used for the HTTP transfer.`, "en"),

  /**
   * The name of a header element.
   */
  elementName: new LitVocabTerm(
    _NS("elementName"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Header element name`, "en")
    .addComment(`The name of a header element.`, "en"),

  /**
   * The value of a header element.
   */
  elementValue: new LitVocabTerm(
    _NS("elementValue"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Header element value`, "en")
    .addComment(`The value of a header element.`, "en"),

  /**
   * The name of an HTTP header field.
   */
  fieldName: new LitVocabTerm(
    _NS("fieldName"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Field name`, "en")
    .addComment(`The name of an HTTP header field.`, "en"),

  /**
   * The value of an HTTP header field.
   */
  fieldValue: new LitVocabTerm(
    _NS("fieldValue"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Field value`, "en")
    .addComment(`The value of an HTTP header field.`, "en"),

  /**
   * The deconstructed parts of an HTTP header value.
   */
  headerElements: new LitVocabTerm(
    _NS("headerElements"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Header elements`, "en")
    .addComment(`The deconstructed parts of an HTTP header value.`, "en"),

  /**
   * The name of an HTTP header.
   */
  hdrName: new LitVocabTerm(
    _NS("hdrName"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Header name`, "en")
    .addComment(`The name of an HTTP header.`, "en"),

  /**
   * The headers in an HTTP message.
   */
  headers: new LitVocabTerm(
    _NS("headers"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Headers`, "en")
    .addComment(`The headers in an HTTP message.`, "en"),

  /**
   * The HTTP version of an HTTP message.
   */
  httpVersion: new LitVocabTerm(
    _NS("httpVersion"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`HTTP version`, "en")
    .addComment(`The HTTP version of an HTTP message.`, "en"),

  /**
   * The HTTP method used for the HTTP request.
   */
  mthd: new LitVocabTerm(
    _NS("mthd"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Method`, "en")
    .addComment(`The HTTP method used for the HTTP request.`, "en"),

  /**
   * The HTTP method name used for the HTTP request.
   */
  methodName: new LitVocabTerm(
    _NS("methodName"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Method name`, "en")
    .addComment(`The HTTP method name used for the HTTP request.`, "en"),

  /**
   * The name of a parameter in a part of a deconstructed HTTP header value.
   */
  paramName: new LitVocabTerm(
    _NS("paramName"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Parameter name`, "en")
    .addComment(`The name of a parameter in a part of a deconstructed HTTP header value.`, "en"),

  /**
   * The parameters in a part of a deconstructed HTTP header value.
   */
  params: new LitVocabTerm(
    _NS("params"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Header parameters`, "en")
    .addComment(`The parameters in a part of a deconstructed HTTP header value.`, "en"),

  /**
   * The value of a parameter in a part of a deconstructed HTTP header value.
   */
  paramValue: new LitVocabTerm(
    _NS("paramValue"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Parameter value`, "en")
    .addComment(`The value of a parameter in a part of a deconstructed HTTP header value.`, "en"),

  /**
   * The reason phrase (status text) of an HTTP response.
   */
  reasonPhrase: new LitVocabTerm(
    _NS("reasonPhrase"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Reason phrase`, "en")
    .addComment(`The reason phrase (status text) of an HTTP response.`, "en"),

  /**
   * The HTTP requests made via a connection.
   */
  requests: new LitVocabTerm(
    _NS("requests"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Requests`, "en")
    .addComment(`The HTTP requests made via a connection.`, "en"),

  /**
   * The HTTP response sent in answer to an HTTP request.
   */
  resp: new LitVocabTerm(
    _NS("resp"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Response`, "en")
    .addComment(`The HTTP response sent in answer to an HTTP request.`, "en"),

  /**
   * The status code of an HTTP response.
   */
  sc: new LitVocabTerm(
    _NS("sc"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Status code`, "en")
    .addComment(`The status code of an HTTP response.`, "en"),

  /**
   * The status code number.
   */
  statusCodeNumber: new LitVocabTerm(
    _NS("statusCodeNumber"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Status code`, "en")
    .addComment(`The status code number.`, "en"),

  /**
   * The status code value of an HTTP response.
   */
  statusCodeValue: new LitVocabTerm(
    _NS("statusCodeValue"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Status code`, "en")
    .addComment(`The status code value of an HTTP response.`, "en"),

};

export { HTTP };
