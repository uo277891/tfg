import { LitVocabTerm, getLocalStore } from "@inrupt/lit-vocab-term";
import dataFactory from "@rdfjs/data-model";

const { namedNode } = dataFactory;
import { NamedNode } from "rdf-js";

/**
  Generated by artifact generator [@inrupt/lit-artifact-generator], version [0.10.15]
  as part of artifact: [vocab-common], version: [0.3.11]
  at 'Saturday, May 30, 2020 1:18 AM'.

  Vocabulary built from vocab list file: [/home/pmcb55/Work/Projects/LIT/lit-vocab/vocab/lit-rdf-vocab/Common/Vocab-List-LIT-Common.yml].
 */

function _NS(localName: string): NamedNode { 
  return namedNode(`http://www.w3.org/2007/ont/httph#${localName}`);
}

const HTTPH = {
  PREFIX: "httph",
  NAMESPACE: "http://www.w3.org/2007/ont/httph#",
  PREFIX_AND_NAMESPACE: { "httph": "http://www.w3.org/2007/ont/httph#" },
  NS: _NS,


  // *******************
  // All the Properties.
  // *******************

  /**
   * See the HTTP specification
   */
  content_type: new LitVocabTerm(
    _NS("content-type"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`content type`)
    .addCommentNoLanguage(`See the HTTP specification`),

  /**
   * See the HTTP specification
   */
  accept: new LitVocabTerm(
    _NS("accept"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Accept`, "en")
    .addComment(`See the HTTP specification`, "en"),

  /**
   * See the HTTP specification
   */
  accept_language: new LitVocabTerm(
    _NS("accept-language"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabel(`Accept-Language`, "en")
    .addComment(`See the HTTP specification`, "en"),

};

export { HTTPH };
