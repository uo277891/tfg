import { LitVocabTerm } from "@inrupt/lit-vocab-term";
import { NamedNode } from "rdf-js";
/**
  Generated by artifact generator [@inrupt/lit-artifact-generator], version [0.10.15]
  as part of artifact: [vocab-common], version: [0.3.11]
  at 'Saturday, May 30, 2020 1:18 AM'.

  Vocabulary built from vocab list file: [/home/pmcb55/Work/Projects/LIT/lit-vocab/vocab/lit-rdf-vocab/Common/Vocab-List-LIT-Common.yml].
 */
declare function _NS(localName: string): NamedNode;
declare const AS: {
    PREFIX: string;
    NAMESPACE: string;
    PREFIX_AND_NAMESPACE: {
        as: string;
    };
    NS: typeof _NS;
    /**
     * An Object representing some form of Action that has been taken
     */
    Activity: LitVocabTerm;
    /**
     * Object
     */
    Object: LitVocabTerm;
    /**
     * Represents a qualified reference to another resource. Patterned after the RFC5988 Web Linking Model
     */
    Link: LitVocabTerm;
    /**
     * An ordered or unordered collection of Objects or Links
     */
    Collection: LitVocabTerm;
    /**
     * A subset of items from a Collection
     */
    CollectionPage: LitVocabTerm;
    /**
     * An Image file
     */
    Image: LitVocabTerm;
    /**
     * A rdf:List variant for Objects and Links
     */
    OrderedItems: LitVocabTerm;
    /**
     * Represents a Social Graph relationship between two Individuals (indicated by the 'a' and 'b' properties)
     */
    Relationship: LitVocabTerm;
    /**
     * A question of any sort.
     */
    Question: LitVocabTerm;
    /**
     * A Profile Document
     */
    Profile: LitVocabTerm;
    /**
     * A placeholder for a deleted object
     */
    Tombstone: LitVocabTerm;
    /**
     * A physical or logical location
     */
    Place: LitVocabTerm;
    /**
     * An ordered subset of items from an OrderedCollection
     */
    OrderedCollectionPage: LitVocabTerm;
    /**
     * Actor accepts the Object
     */
    Accept: LitVocabTerm;
    /**
     * Block
     */
    Block: LitVocabTerm;
    /**
     * Actor is ignoring the Object
     */
    Ignore: LitVocabTerm;
    /**
     * An Activity that has no direct object
     */
    IntransitiveActivity: LitVocabTerm;
    /**
     * To Add an Object or Link to Something
     */
    Add: LitVocabTerm;
    /**
     * Actor announces the object to the target
     */
    Announce: LitVocabTerm;
    /**
     * Represents a software application of any sort
     */
    Application: LitVocabTerm;
    /**
     * To Arrive Somewhere (can be used, for instance, to indicate that a particular entity is currently located somewhere, e.g. a "check-in")
     */
    Arrive: LitVocabTerm;
    /**
     * A written work. Typically several paragraphs long. For example, a blog post or a news article.
     */
    Article: LitVocabTerm;
    /**
     * An audio file
     */
    Audio: LitVocabTerm;
    /**
     * Represents a digital document/file of any sort
     */
    Document: LitVocabTerm;
    /**
     * A variation of Collection in which items are strictly ordered
     */
    OrderedCollection: LitVocabTerm;
    /**
     * To Create Something
     */
    Create: LitVocabTerm;
    /**
     * To Delete Something
     */
    Delete: LitVocabTerm;
    /**
     * The actor dislikes the object
     */
    Dislike: LitVocabTerm;
    /**
     * An Event of any kind
     */
    Event: LitVocabTerm;
    /**
     * To flag something (e.g. flag as inappropriate, flag as spam, etc)
     */
    Flag: LitVocabTerm;
    /**
     * To Express Interest in Something
     */
    Follow: LitVocabTerm;
    /**
     * A Group of any kind.
     */
    Group: LitVocabTerm;
    /**
     * To invite someone or something to something
     */
    Invite: LitVocabTerm;
    /**
     * To Offer something to someone or something
     */
    Offer: LitVocabTerm;
    /**
     * To Join Something
     */
    Join: LitVocabTerm;
    /**
     * To Leave Something
     */
    Leave: LitVocabTerm;
    /**
     * To Like Something
     */
    Like: LitVocabTerm;
    /**
     * The actor viewed the object
     */
    View: LitVocabTerm;
    /**
     * The actor listened to the object
     */
    Listen: LitVocabTerm;
    /**
     * The actor read the object
     */
    Read: LitVocabTerm;
    /**
     * The actor is moving the object. The target specifies where the object is moving to. The origin specifies where the object is moving from.
     */
    Move: LitVocabTerm;
    /**
     * The actor is traveling to the target. The origin specifies where the actor is traveling from.
     */
    Travel: LitVocabTerm;
    /**
     * A specialized Link that represents an @mention
     */
    Mention: LitVocabTerm;
    /**
     * A Short note, typically less than a single paragraph. A "tweet" is an example, or a "status update"
     */
    Note: LitVocabTerm;
    /**
     * A Web Page
     */
    Page: LitVocabTerm;
    /**
     * A Person
     */
    Person: LitVocabTerm;
    /**
     * An Organization
     */
    Organization: LitVocabTerm;
    /**
     * Actor rejects the Object
     */
    Reject: LitVocabTerm;
    /**
     * To Remove Something
     */
    Remove: LitVocabTerm;
    /**
     * A service provided by some entity
     */
    Service: LitVocabTerm;
    /**
     * Actor tentatively accepts the Object
     */
    TentativeAccept: LitVocabTerm;
    /**
     * Actor tentatively rejects the object
     */
    TentativeReject: LitVocabTerm;
    /**
     * To Undo Something. This would typically be used to indicate that a previous Activity has been undone.
     */
    Undo: LitVocabTerm;
    /**
     * To Update/Modify Something
     */
    Update: LitVocabTerm;
    /**
     * A Video document of any kind.
     */
    Video: LitVocabTerm;
    /**
     * Subproperty of as:attributedTo that identifies the primary actor
     */
    actor: LitVocabTerm;
    /**
     * Identifies an entity to which an object is attributed
     */
    attributedTo: LitVocabTerm;
    /**
     * attachment
     */
    attachment: LitVocabTerm;
    /**
     * attachments
     */
    attachments: LitVocabTerm;
    /**
     * Identifies the author of an object. Deprecated. Use as:attributedTo instead
     */
    author: LitVocabTerm;
    /**
     * bcc
     */
    bcc: LitVocabTerm;
    /**
     * bto
     */
    bto: LitVocabTerm;
    /**
     * cc
     */
    cc: LitVocabTerm;
    /**
     * Specifies the context within which an object exists or an activity was performed
     */
    context: LitVocabTerm;
    /**
     * current
     */
    current: LitVocabTerm;
    /**
     * first
     */
    first: LitVocabTerm;
    /**
     * generator
     */
    generator: LitVocabTerm;
    /**
     * icon
     */
    icon: LitVocabTerm;
    /**
     * image
     */
    image: LitVocabTerm;
    /**
     * inReplyTo
     */
    inReplyTo: LitVocabTerm;
    /**
     * items
     */
    items: LitVocabTerm;
    /**
     * last
     */
    last: LitVocabTerm;
    /**
     * location
     */
    location: LitVocabTerm;
    /**
     * next
     */
    next: LitVocabTerm;
    /**
     * object
     */
    object: LitVocabTerm;
    /**
     * Describes a possible exclusive answer or option for a question.
     */
    oneOf: LitVocabTerm;
    /**
     * Describes a possible inclusive answer or option for a question.
     */
    anyOf: LitVocabTerm;
    /**
     * prev
     */
    prev: LitVocabTerm;
    /**
     * preview
     */
    preview: LitVocabTerm;
    /**
     * provider
     */
    provider: LitVocabTerm;
    /**
     * replies
     */
    replies: LitVocabTerm;
    /**
     * result
     */
    result: LitVocabTerm;
    /**
     * audience
     */
    audience: LitVocabTerm;
    /**
     * partOf
     */
    partOf: LitVocabTerm;
    /**
     * tag
     */
    tag: LitVocabTerm;
    /**
     * tags
     */
    tags: LitVocabTerm;
    /**
     * target
     */
    target: LitVocabTerm;
    /**
     * For certain activities, specifies the entity from which the action is directed.
     */
    origin: LitVocabTerm;
    /**
     * Indentifies an object used (or to be used) to complete an activity
     */
    instrument: LitVocabTerm;
    /**
     * to
     */
    to: LitVocabTerm;
    /**
     * Specifies a link to a specific representation of the Object
     */
    url: LitVocabTerm;
    /**
     * On a Relationship object, identifies the subject. e.g. when saying "John is connected to Sally", 'subject' refers to 'John'
     */
    subject: LitVocabTerm;
    /**
     * On a Relationship object, describes the type of relationship
     */
    relationship: LitVocabTerm;
    /**
     * On a Profile object, describes the object described by the profile
     */
    describes: LitVocabTerm;
    /**
     * On a Tombstone object, describes the former type of the deleted object
     */
    formerType: LitVocabTerm;
    /**
     * Specifies the accuracy around the point established by the longitude and latitude
     */
    accuracy: LitVocabTerm;
    /**
     * The altitude of a place
     */
    altitude: LitVocabTerm;
    /**
     * The content of the object.
     */
    content: LitVocabTerm;
    /**
     * name
     */
    name: LitVocabTerm;
    /**
     * downstreamDuplicates
     */
    downstreamDuplicates: LitVocabTerm;
    /**
     * The duration of the object
     */
    duration: LitVocabTerm;
    /**
     * The ending time of the object
     */
    endTime: LitVocabTerm;
    /**
     * The display height expressed as device independent pixels
     */
    height: LitVocabTerm;
    /**
     * The target URI of the Link
     */
    href: LitVocabTerm;
    /**
     * A hint about the language of the referenced resource
     */
    hreflang: LitVocabTerm;
    /**
     * id
     */
    id: LitVocabTerm;
    /**
     * The latitude
     */
    latitude: LitVocabTerm;
    /**
     * The longitude
     */
    longitude: LitVocabTerm;
    /**
     * The MIME Media Type
     */
    mediaType: LitVocabTerm;
    /**
     * objectType
     */
    objectType: LitVocabTerm;
    /**
     * Specifies the date and time the object was published
     */
    published: LitVocabTerm;
    /**
     * Specifies a radius around the point established by the longitude and latitude
     */
    radius: LitVocabTerm;
    /**
     * A numeric rating (>= 0.0, <= 5.0) for the object
     */
    rating: LitVocabTerm;
    /**
     * The RFC 5988 or HTML5 Link Relation associated with the Link
     */
    rel: LitVocabTerm;
    /**
     * In a strictly ordered logical collection, specifies the index position of the first item in the items list
     */
    startIndex: LitVocabTerm;
    /**
     * The starting time of the object
     */
    startTime: LitVocabTerm;
    /**
     * A short summary of the object
     */
    summary: LitVocabTerm;
    /**
     * The total number of items in a logical collection
     */
    totalItems: LitVocabTerm;
    /**
     * Identifies the unit of measurement used by the radius, altitude and accuracy properties. The value can be expressed either as one of a set of predefined units or as a well-known common URI that identifies units.
     */
    units: LitVocabTerm;
    /**
     * Specifies when the object was last updated
     */
    updated: LitVocabTerm;
    /**
     * upstreamDuplicates
     */
    upstreamDuplicates: LitVocabTerm;
    /**
     * verb
     */
    verb: LitVocabTerm;
    /**
     * Specifies the preferred display width of the content, expressed in terms of device independent pixels.
     */
    width: LitVocabTerm;
    /**
     * Specifies the date and time the object was deleted
     */
    deleted: LitVocabTerm;
};
export { AS };
