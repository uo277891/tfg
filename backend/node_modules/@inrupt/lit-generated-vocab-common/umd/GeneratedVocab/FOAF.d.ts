import { LitVocabTerm } from "@inrupt/lit-vocab-term";
import { NamedNode } from "rdf-js";
/**
  Generated by artifact generator [@inrupt/lit-artifact-generator], version [0.10.15]
  as part of artifact: [vocab-common], version: [0.3.11]
  at 'Saturday, May 30, 2020 1:18 AM'.

  Vocabulary built from vocab list file: [/home/pmcb55/Work/Projects/LIT/lit-vocab/vocab/lit-rdf-vocab/Common/Vocab-List-LIT-Common.yml].
 */
declare function _NS(localName: string): NamedNode;
declare const FOAF: {
    PREFIX: string;
    NAMESPACE: string;
    PREFIX_AND_NAMESPACE: {
        foaf: string;
    };
    NS: typeof _NS;
    /**
     * An agent (eg. person, group, software or physical artifact).
     */
    Agent: LitVocabTerm;
    /**
     * A document.
     */
    Document: LitVocabTerm;
    /**
     * An organization.
     */
    Organization: LitVocabTerm;
    /**
     * A project (a collective endeavour of some kind).
     */
    Project: LitVocabTerm;
    /**
     * A class of Agents.
     */
    Group: LitVocabTerm;
    /**
     * An image.
     */
    Image: LitVocabTerm;
    /**
     * A foaf:LabelProperty is any RDF property with texual values that serve as labels.
     */
    LabelProperty: LitVocabTerm;
    /**
     * An online account.
     */
    OnlineAccount: LitVocabTerm;
    /**
     * An online chat account.
     */
    OnlineChatAccount: LitVocabTerm;
    /**
     * An online e-commerce account.
     */
    OnlineEcommerceAccount: LitVocabTerm;
    /**
     * An online gaming account.
     */
    OnlineGamingAccount: LitVocabTerm;
    /**
     * A person.
     */
    Person: LitVocabTerm;
    /**
     * A personal profile RDF document.
     */
    PersonalProfileDocument: LitVocabTerm;
    /**
     * Indicates an account held by this agent.
     */
    account: LitVocabTerm;
    /**
     * Indicates the name (identifier) associated with this online account.
     */
    accountName: LitVocabTerm;
    /**
     * Indicates a homepage of the service provide for this online account.
     */
    accountServiceHomepage: LitVocabTerm;
    /**
     * The age in years of some agent.
     */
    age: LitVocabTerm;
    /**
     * An AIM chat ID
     */
    aimChatID: LitVocabTerm;
    /**
     * A short informal nickname characterising an agent (includes login identifiers, IRC and other chat nicknames).
     */
    nick: LitVocabTerm;
    /**
     * A location that something is based near, for some broadly human notion of near.
     */
    based_near: LitVocabTerm;
    /**
     * The birthday of this Agent, represented in mm-dd string form, eg. '12-31'.
     */
    birthday: LitVocabTerm;
    /**
     * A current project this person works on.
     */
    currentProject: LitVocabTerm;
    /**
     * A depiction of some thing.
     */
    depiction: LitVocabTerm;
    /**
     * A thing depicted in this representation.
     */
    depicts: LitVocabTerm;
    /**
     * A checksum for the DNA of some thing. Joke.
     */
    dnaChecksum: LitVocabTerm;
    /**
     * The family name of some person.
     */
    familyName: LitVocabTerm;
    /**
     * The family name of some person.
     */
    family_name: LitVocabTerm;
    /**
     * The first name of a person.
     */
    firstName: LitVocabTerm;
    /**
     * The underlying or 'focal' entity associated with some SKOS-described concept.
     */
    focus: LitVocabTerm;
    /**
     * An organization funding a project or person.
     */
    fundedBy: LitVocabTerm;
    /**
     * A textual geekcode for this person, see http://www.geekcode.com/geek.html
     */
    geekcode: LitVocabTerm;
    /**
     * The gender of this Agent (typically but not necessarily 'male' or 'female').
     */
    gender: LitVocabTerm;
    /**
     * The given name of some person.
     */
    givenName: LitVocabTerm;
    /**
     * The given name of some person.
     */
    givenname: LitVocabTerm;
    /**
     * Indicates an account held by this agent.
     */
    holdsAccount: LitVocabTerm;
    /**
     * A homepage for some thing.
     */
    homepage: LitVocabTerm;
    /**
     * A page or document about this thing.
     */
    page: LitVocabTerm;
    /**
     * A document that this thing is the primary topic of.
     */
    isPrimaryTopicOf: LitVocabTerm;
    /**
     * An ICQ chat ID
     */
    icqChatID: LitVocabTerm;
    /**
     * An image that can be used to represent some thing (ie. those depictions which are particularly representative of something, eg. one's photo on a homepage).
     */
    img: LitVocabTerm;
    /**
     * A page about a topic of interest to this person.
     */
    interest: LitVocabTerm;
    /**
     * The primary topic of some page or document.
     */
    primaryTopic: LitVocabTerm;
    /**
     * A jabber ID for something.
     */
    jabberID: LitVocabTerm;
    /**
     * A person known by this person (indicating some level of reciprocated interaction between the parties).
     */
    knows: LitVocabTerm;
    /**
     * The last name of a person.
     */
    lastName: LitVocabTerm;
    /**
     * A logo representing some thing.
     */
    logo: LitVocabTerm;
    /**
     * Something that was made by this agent.
     */
    made: LitVocabTerm;
    /**
     * An agent that made this thing.
     */
    maker: LitVocabTerm;
    /**
     * A personal mailbox, ie. an Internet mailbox associated with exactly one owner, the first owner of this mailbox. This is a 'static inverse functional property', in that there is (across time and change) at most one individual that ever has any particular value for foaf:mbox.
     */
    mbox: LitVocabTerm;
    /**
     * The sha1sum of the URI of an Internet mailbox associated with exactly one owner, the first owner of the mailbox.
     */
    mbox_sha1sum: LitVocabTerm;
    /**
     * Indicates a member of a Group
     */
    member: LitVocabTerm;
    /**
     * Indicates the class of individuals that are a member of a Group
     */
    membershipClass: LitVocabTerm;
    /**
     * An MSN chat ID
     */
    msnChatID: LitVocabTerm;
    /**
     * A Myers Briggs (MBTI) personality classification.
     */
    myersBriggs: LitVocabTerm;
    /**
     * A name for some thing.
     */
    name: LitVocabTerm;
    /**
     * An OpenID for an Agent.
     */
    openid: LitVocabTerm;
    /**
     * A topic of some page or document.
     */
    topic: LitVocabTerm;
    /**
     * A project this person has previously worked on.
     */
    pastProject: LitVocabTerm;
    /**
     * A phone, specified using fully qualified tel: URI scheme (refs: http://www.w3.org/Addressing/schemes.html#tel).
     */
    phone: LitVocabTerm;
    /**
     * A .plan comment, in the tradition of finger and '.plan' files.
     */
    plan: LitVocabTerm;
    /**
     * A link to the publications of this person.
     */
    publications: LitVocabTerm;
    /**
     * A homepage of a school attended by the person.
     */
    schoolHomepage: LitVocabTerm;
    /**
     * A sha1sum hash, in hex.
     */
    sha1: LitVocabTerm;
    /**
     * A Skype ID
     */
    skypeID: LitVocabTerm;
    /**
     * A string expressing what the user is happy for the general public (normally) to know about their current activity.
     */
    status: LitVocabTerm;
    /**
     * The surname of some person.
     */
    surname: LitVocabTerm;
    /**
     * A theme.
     */
    theme: LitVocabTerm;
    /**
     * A derived thumbnail image.
     */
    thumbnail: LitVocabTerm;
    /**
     * A tipjar document for this agent, describing means for payment and reward.
     */
    tipjar: LitVocabTerm;
    /**
     * Title (Mr, Mrs, Ms, Dr. etc)
     */
    title: LitVocabTerm;
    /**
     * A thing of interest to this person.
     */
    topic_interest: LitVocabTerm;
    /**
     * A weblog of some thing (whether person, group, company etc.).
     */
    weblog: LitVocabTerm;
    /**
     * A work info homepage of some person; a page about their work for some organization.
     */
    workInfoHomepage: LitVocabTerm;
    /**
     * A workplace homepage of some person; the homepage of an organization they work for.
     */
    workplaceHomepage: LitVocabTerm;
    /**
     * A Yahoo chat ID
     */
    yahooChatID: LitVocabTerm;
};
export { FOAF };
