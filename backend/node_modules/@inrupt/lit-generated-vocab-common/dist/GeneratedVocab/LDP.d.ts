import { LitVocabTerm } from "@inrupt/lit-vocab-term";
import { NamedNode } from "rdf-js";
/**
  Generated by artifact generator [@inrupt/lit-artifact-generator], version [0.10.15]
  as part of artifact: [vocab-common], version: [0.3.11]
  at 'Saturday, May 30, 2020 1:18 AM'.

  Vocabulary built from vocab list file: [/home/pmcb55/Work/Projects/LIT/lit-vocab/vocab/lit-rdf-vocab/Common/Vocab-List-LIT-Common.yml].

  Vocabulary URIs defined in the Linked Data Platform (LDP) namespace.
 */
declare function _NS(localName: string): NamedNode;
declare const LDP: {
    PREFIX: string;
    NAMESPACE: string;
    PREFIX_AND_NAMESPACE: {
        ldp: string;
    };
    NS: typeof _NS;
    /**
     * A HTTP-addressable resource whose lifecycle is managed by a LDP server.
     */
    Resource: LitVocabTerm;
    /**
     * A Linked Data Platform Resource (LDPR) whose state is represented as RDF.
     */
    RDFSource: LitVocabTerm;
    /**
     * A Linked Data Platform Resource (LDPR) whose state is NOT represented as RDF.
     */
    NonRDFSource: LitVocabTerm;
    /**
     * A Linked Data Platform RDF Source (LDP-RS) that also conforms to additional patterns and conventions for managing membership. Readers should refer to the specification defining this ontology for the list of behaviors associated with it.
     */
    Container: LitVocabTerm;
    /**
     * An LDPC that uses a predefined predicate to simply link to its contained resources.
     */
    BasicContainer: LitVocabTerm;
    /**
     * An LDPC that is similar to a LDP-DC but it allows an indirection with the ability to list as member a resource, such as a URI representing a real-world object, that is different from the resource that is created.
     */
    DirectContainer: LitVocabTerm;
    /**
     * An LDPC that has the flexibility of choosing what form the membership triples take.
     */
    IndirectContainer: LitVocabTerm;
    /**
     * URI signifying that the resource is an in-sequence page resource, as defined by LDP Paging.  Typically used on Link rel='type' response headers.
     */
    Page: LitVocabTerm;
    /**
     * Element in the list of sorting criteria used by the server to assign container members to pages.
     */
    PageSortCriterion: LitVocabTerm;
    /**
     * Indicates which predicate is used in membership triples, and that the membership triple pattern is < membership-constant-URI , object-of-hasMemberRelation, member-URI >.
     */
    hasMemberRelation: LitVocabTerm;
    /**
     * Indicates which predicate is used in membership triples, and that the membership triple pattern is < member-URI , object-of-isMemberOfRelation, membership-constant-URI >.
     */
    isMemberOfRelation: LitVocabTerm;
    /**
     * Indicates the membership-constant-URI in a membership triple.  Depending upon the membership triple pattern a container uses, as indicated by the presence of ldp:hasMemberRelation or ldp:isMemberOfRelation, the membership-constant-URI might occupy either the subject or object position in membership triples.
     */
    membershipResource: LitVocabTerm;
    /**
     * Indicates which triple in a creation request should be used as the member-URI value in the membership triple added when the creation request is successful.
     */
    insertedContentRelation: LitVocabTerm;
    /**
     * LDP servers should use this predicate as the membership predicate if there is no obvious predicate from an application vocabulary to use.
     */
    member: LitVocabTerm;
    /**
     * Links a container with resources created through the container.
     */
    contains: LitVocabTerm;
    /**
     * Links a resource with constraints that the server requires requests like creation and update to conform to.
     */
    constrainedBy: LitVocabTerm;
    /**
     * Link to the list of sorting criteria used by the server in a representation.  Typically used on Link response headers as an extension link relation URI in the rel= parameter.
     */
    pageSortCriteria: LitVocabTerm;
    /**
     * Predicate used to specify the order of the members across a page sequence's in-sequence page resources; it asserts nothing about the order of members in the representation of a single page.
     */
    pageSortPredicate: LitVocabTerm;
    /**
     * The ascending/descending/etc order used to order the members across pages in a page sequence.
     */
    pageSortOrder: LitVocabTerm;
    /**
     * The collation used to order the members across pages in a page sequence when comparing strings.
     */
    pageSortCollation: LitVocabTerm;
    /**
     * Link to a page sequence resource, as defined by LDP Paging.  Typically used to communicate the sorting criteria used to allocate LDPC members to pages.
     */
    pageSequence: LitVocabTerm;
    /**
     * Links a resource to a container where notifications for the resource can be created and discovered.
     */
    inbox: LitVocabTerm;
};
export { LDP };
