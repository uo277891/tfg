import { LitVocabTerm } from "@inrupt/lit-vocab-term";
import { NamedNode } from "rdf-js";
/**
  Generated by artifact generator [@inrupt/lit-artifact-generator], version [0.10.15]
  as part of artifact: [vocab-common], version: [0.3.11]
  at 'Saturday, May 30, 2020 1:18 AM'.

  Vocabulary built from vocab list file: [/home/pmcb55/Work/Projects/LIT/lit-vocab/vocab/lit-rdf-vocab/Common/Vocab-List-LIT-Common.yml].

  Inrupt-created copy of RLOG, needed due to Server 500 errors resolving original uni-leipzig.org!
 */
declare function _NS(localName: string): NamedNode;
declare const RLOG: {
    PREFIX: string;
    NAMESPACE: string;
    PREFIX_AND_NAMESPACE: {
        rlog: string;
    };
    NS: typeof _NS;
    /**
     * look here: http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/Level.html
     */
    Level: LitVocabTerm;
    /**
     * An entry in a log.
     */
    Entry: LitVocabTerm;
    /**
     * A status code which can occur in an application. Instances of this class must put the name of the status as rdfs:label and describe it with rdfs:comment.
     */
    StatusCode: LitVocabTerm;
    /**
     * The ALL has the lowest possible rank and is intended to turn on all logging.
     */
    ALL: LitVocabTerm;
    /**
     * Attention: the ids here can change, they are just used to define an order over the levels!
     */
    priority: LitVocabTerm;
    /**
     * The DEBUG Level designates fine-grained informational events that are most useful to debug an application.
     */
    DEBUG: LitVocabTerm;
    /**
     * The ERROR level designates error events that might still allow the application to continue running.
     */
    ERROR: LitVocabTerm;
    /**
     * The FATAL level designates very severe error events that will presumably lead the application to abort.
     */
    FATAL: LitVocabTerm;
    /**
     * The INFO level designates informational messages that highlight the progress of the application at coarse-grained level.
     */
    INFO: LitVocabTerm;
    /**
     * The OFF has the highest possible rank and is intended to turn off logging.
     */
    OFF: LitVocabTerm;
    /**
     * The TRACE Level designates finer-grained informational events than the DEBUG.
     */
    TRACE: LitVocabTerm;
    /**
     * The WARN level designates potentially harmful situations.
     */
    WARN: LitVocabTerm;
    /**
     * Outputs the fully qualified class name of the caller issuing the logging request.
     */
    className: LitVocabTerm;
    /**
     * The numerical value of the code, e.g. 200, 404 or 42.
     */
    codeId: LitVocabTerm;
    /**
     * Logging datetime (or just date)
     */
    date: LitVocabTerm;
    /**
     * Links a log message to a status code.
     */
    hasCode: LitVocabTerm;
    /**
     * logLevel
     */
    level: LitVocabTerm;
    /**
     * Logging message
     */
    message: LitVocabTerm;
    /**
     * If we mix normal and log output, this can be used to refer to the resource in the RDF the error is connected to.
     */
    resource: LitVocabTerm;
};
export { RLOG };
