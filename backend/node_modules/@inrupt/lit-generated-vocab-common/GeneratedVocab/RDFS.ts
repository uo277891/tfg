import { LitVocabTerm, getLocalStore } from "@inrupt/lit-vocab-term";
import dataFactory from "@rdfjs/data-model";

const { namedNode } = dataFactory;
import { NamedNode } from "rdf-js";

/**
  Generated by artifact generator [@inrupt/lit-artifact-generator], version [0.10.15]
  as part of artifact: [vocab-common], version: [0.3.11]
  at 'Saturday, May 30, 2020 1:18 AM'.

  Vocabulary built from vocab list file: [/home/pmcb55/Work/Projects/LIT/lit-vocab/vocab/lit-rdf-vocab/Common/Vocab-List-LIT-Common.yml].
 */

function _NS(localName: string): NamedNode { 
  return namedNode(`http://www.w3.org/2000/01/rdf-schema#${localName}`);
}

const RDFS = {
  PREFIX: "rdfs",
  NAMESPACE: "http://www.w3.org/2000/01/rdf-schema#",
  PREFIX_AND_NAMESPACE: { "rdfs": "http://www.w3.org/2000/01/rdf-schema#" },
  NS: _NS,

  // *****************
  // All the Classes.
  // *****************

  /**
   * The class resource, everything.
   */
  Resource: new LitVocabTerm(
    _NS("Resource"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`Resource`)
    .addCommentNoLanguage(`The class resource, everything.`),

  /**
   * The class of classes.
   */
  Class: new LitVocabTerm(
    _NS("Class"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`Class`)
    .addCommentNoLanguage(`The class of classes.`),

  /**
   * The class of literal values, eg. textual strings and integers.
   */
  Literal: new LitVocabTerm(
    _NS("Literal"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`Literal`)
    .addCommentNoLanguage(`The class of literal values, eg. textual strings and integers.`),

  /**
   * The class of RDF containers.
   */
  Container: new LitVocabTerm(
    _NS("Container"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`Container`)
    .addCommentNoLanguage(`The class of RDF containers.`),

  /**
   * The class of container membership properties, rdf:_1, rdf:_2, ...,
                    all of which are sub-properties of 'member'.
   */
  ContainerMembershipProperty: new LitVocabTerm(
    _NS("ContainerMembershipProperty"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`ContainerMembershipProperty`)
    .addCommentNoLanguage(`The class of container membership properties, rdf:_1, rdf:_2, ...,
                    all of which are sub-properties of 'member'.`),

  /**
   * The class of RDF datatypes.
   */
  Datatype: new LitVocabTerm(
    _NS("Datatype"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`Datatype`)
    .addCommentNoLanguage(`The class of RDF datatypes.`),

  // *******************
  // All the Properties.
  // *******************

  /**
   * The defininition of the subject resource.
   */
  isDefinedBy: new LitVocabTerm(
    _NS("isDefinedBy"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`isDefinedBy`)
    .addCommentNoLanguage(`The defininition of the subject resource.`),

  /**
   * A human-readable name for the subject.
   */
  label: new LitVocabTerm(
    _NS("label"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`label`)
    .addCommentNoLanguage(`A human-readable name for the subject.`),

  /**
   * A description of the subject resource.
   */
  comment: new LitVocabTerm(
    _NS("comment"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`comment`)
    .addCommentNoLanguage(`A description of the subject resource.`),

  /**
   * The subject is a subclass of a class.
   */
  subClassOf: new LitVocabTerm(
    _NS("subClassOf"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`subClassOf`)
    .addCommentNoLanguage(`The subject is a subclass of a class.`),

  /**
   * A range of the subject property.
   */
  range: new LitVocabTerm(
    _NS("range"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`range`)
    .addCommentNoLanguage(`A range of the subject property.`),

  /**
   * A domain of the subject property.
   */
  domain: new LitVocabTerm(
    _NS("domain"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`domain`)
    .addCommentNoLanguage(`A domain of the subject property.`),

  /**
   * The subject is a subproperty of a property.
   */
  subPropertyOf: new LitVocabTerm(
    _NS("subPropertyOf"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`subPropertyOf`)
    .addCommentNoLanguage(`The subject is a subproperty of a property.`),

  /**
   * Further information about the subject resource.
   */
  seeAlso: new LitVocabTerm(
    _NS("seeAlso"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`seeAlso`)
    .addCommentNoLanguage(`Further information about the subject resource.`),

  /**
   * A member of the subject resource.
   */
  member: new LitVocabTerm(
    _NS("member"),
    dataFactory,
    getLocalStore(),
    false
  )
    .addLabelNoLanguage(`member`)
    .addCommentNoLanguage(`A member of the subject resource.`),

};

export { RDFS };
